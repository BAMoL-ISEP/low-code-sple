{
  "name": "GoodsPurchaseRequest",
  "attributes": [
    {
      "name": "_resource",
      "type": "Product",
      "isSystem": true,
      "isReadOnly": false,
      "description": null,
      "multiplicity": {
        "lower": 1,
        "upper": 1
      },
      "aggregationKind": "Shared",
      "isSensitiveData": null,
      "dependsOnAttribute": null
    },
    {
      "name": "_provider",
      "type": "Supplier",
      "isSystem": true,
      "isReadOnly": false,
      "description": null,
      "multiplicity": {
        "lower": 1,
        "upper": 1
      },
      "aggregationKind": "Shared",
      "isSensitiveData": null,
      "dependsOnAttribute": null
    },
    {
      "name": "_receiver",
      "type": "Company",
      "isSystem": true,
      "isReadOnly": false,
      "description": null,
      "multiplicity": {
        "lower": 1,
        "upper": 1
      },
      "aggregationKind": "Shared",
      "isSensitiveData": null,
      "dependsOnAttribute": null
    },
    {
      "name": "_code",
      "type": "Text",
      "isSystem": true,
      "isReadOnly": false,
      "description": null,
      "multiplicity": {
        "lower": 1,
        "upper": 1
      },
      "aggregationKind": "None",
      "isSensitiveData": null,
      "dependsOnAttribute": null
    },
    {
      "name": "_quantity",
      "type": "Decimal",
      "isSystem": true,
      "isReadOnly": false,
      "description": null,
      "multiplicity": {
        "lower": 1,
        "upper": 1
      },
      "aggregationKind": "None",
      "isSensitiveData": null,
      "dependsOnAttribute": null
    },
    {
      "name": "_amount",
      "type": "Decimal",
      "isSystem": true,
      "isReadOnly": false,
      "description": null,
      "multiplicity": {
        "lower": 1,
        "upper": 1
      },
      "aggregationKind": "None",
      "isSensitiveData": null,
      "dependsOnAttribute": null
    },
    {
      "name": "UnitPrice",
      "type": "Decimal",
      "isSystem": false,
      "isReadOnly": false,
      "description": "",
      "multiplicity": {
        "lower": 1,
        "upper": 1
      },
      "aggregationKind": "None",
      "isSensitiveData": false,
      "dependsOnAttribute": ""
    }
  ],
  "dataSource": "System",
  "description": "",
  "dataBehaviours": [],
  "entityBehaviours": [
    {
      "name": "Defaults",
      "type": "Initialize",
      "attribute": null,
      "expression": "if(this._code != null && this._code != String.Empty) return; \r\nthis._code = Guid.NewGuid().ToString(\"N\");",
      "description": null
    },
    {
      "name": "Total",
      "type": "Formula",
      "attribute": "_amount",
      "expression": "return UnitPrice * _quantity;",
      "description": ""
    },
    {
      "name": "OnProductChange",
      "type": "Action",
      "attribute": "_resource",
      "expression": "\n\n// Code generated by an accelerator (you can change it if you need)\n// The following code invokes the API to retrieve the data of an entity and set the values in the current entity\nif(string.IsNullOrEmpty(this._resource?.ToString()))\n    return;\n\n// In order to prevent to invoke the API if the values were sent by the user\nif(\n    this._Dto.HasPropertyChanged(nameof(this.UnitPrice))  \n)\n    return;\n\nvar httpClient = this._Context.CreateApplicationHttpClient();\nvar dataSource = \"Default\";\nvar requestResult = httpClient.GetAsync($\"Product/{dataSource}/{this._resource}\").GetAwaiter().GetResult();\n\nif (!requestResult.IsSuccessStatusCode)\n    throw new Exception($\"Can't retrieve the entity '{this._resource}'\");\n\nvar entity = requestResult.Content.ReadAsAsync<ProductDto>().GetAwaiter().GetResult();\n\nthis.UnitPrice = entity.UnitPrice.Value; \n",
      "description": ""
    }
  ],
  "behaviourNamespaces": []
}