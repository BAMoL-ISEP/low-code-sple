{ "name" : "SaleOrderLine" , "isRoot" : false , "attributes" : [ { "name" : "_code" , "type" : "Text" , "isSystem" : true , "isReadOnly" : false , "description" : null , "multiplicity" : { "lower" : 1 , "upper" : 1 } , "aggregationKind" : "None" , "isSensitiveData" : false , "dependsOnAttribute" : null } , { "name" : "_name" , "type" : "Text" , "isSystem" : true , "isReadOnly" : false , "description" : null , "multiplicity" : { "lower" : 1 , "upper" : 1 } , "aggregationKind" : "None" , "isSensitiveData" : false , "dependsOnAttribute" : null } , { "name" : "_description" , "type" : "Text" , "isSystem" : true , "isReadOnly" : false , "description" : null , "multiplicity" : { "lower" : 0 , "upper" : 1 } , "aggregationKind" : "None" , "isSensitiveData" : false , "dependsOnAttribute" : null } , { "name" : "_inactive" , "type" : "Boolean" , "isSystem" : true , "isReadOnly" : false , "description" : null , "multiplicity" : { "lower" : 1 , "upper" : 1 } , "aggregationKind" : "None" , "isSensitiveData" : false , "dependsOnAttribute" : null } , { "name" : "Product" , "type" : "Product" , "isSystem" : false , "isReadOnly" : false , "description" : "" , "multiplicity" : { "lower" : 1 , "upper" : 1 } , "aggregationKind" : "Shared" , "isSensitiveData" : false , "dependsOnAttribute" : "" } , { "name" : "UnitPrice" , "type" : "Decimal" , "isSystem" : false , "isReadOnly" : false , "description" : "" , "multiplicity" : { "lower" : 1 , "upper" : 1 } , "aggregationKind" : "None" , "isSensitiveData" : false , "dependsOnAttribute" : "" } , { "name" : "Quantity" , "type" : "Integer" , "isSystem" : false , "isReadOnly" : false , "description" : "" , "multiplicity" : { "lower" : 1 , "upper" : 1 } , "aggregationKind" : "None" , "isSensitiveData" : false , "dependsOnAttribute" : "" } , { "name" : "Value" , "type" : "Decimal" , "isSystem" : false , "isReadOnly" : true , "description" : "" , "multiplicity" : { "lower" : 1 , "upper" : 1 } , "aggregationKind" : "None" , "isSensitiveData" : false , "dependsOnAttribute" : "" } , { "name" : "VatTax" , "type" : "VatTax" , "isSystem" : false , "isReadOnly" : false , "description" : "" , "multiplicity" : { "lower" : 1 , "upper" : 1 } , "aggregationKind" : "Shared" , "isSensitiveData" : false , "dependsOnAttribute" : "" } , { "name" : "VatValue" , "type" : "Decimal" , "isSystem" : false , "isReadOnly" : true , "description" : "The tax multiplier" , "multiplicity" : { "lower" : 1 , "upper" : 1 } , "aggregationKind" : "None" , "isSensitiveData" : false , "dependsOnAttribute" : "" } , { "name" : "TotalWithVat" , "type" : "Decimal" , "isSystem" : false , "isReadOnly" : true , "description" : "" , "multiplicity" : { "lower" : 1 , "upper" : 1 } , "aggregationKind" : "None" , "isSensitiveData" : false , "dependsOnAttribute" : "" } ] , "dataSource" : "System" , "description" : "" , "dataBehaviours" : [ ] , "entityBehaviours" : [ { "name" : "Defaults" , "type" : "Initialize" , "attribute" : null , "expression" : "if(this._code !\u003d null \u0026\u0026 this._code !\u003d String.Empty) return; \nthis._code \u003d Guid.NewGuid().ToString(\"N\");\n\nthis._name \u003d this._code;" , "description" : null } , { "name" : "ValueFormula" , "type" : "Formula" , "attribute" : "Value" , "expression" : "return this.UnitPrice * this.Quantity;" , "description" : "" } , { "name" : "OnChange_Product" , "type" : "Action" , "attribute" : "Product" , "expression" : "\nvar httpClient \u003d _Context.CreateApplicationHttpClient();\nvar productRequest \u003d httpClient.PostAsJsonAsync($\"Queries/ProductQuery/Default?PageSize\u003d1\",\n        new { Filter \u003d new { Property \u003d \"_code\", Value \u003d newValue } })\n    .GetAwaiter().GetResult();\n\nif (productRequest.IsSuccessStatusCode)\n{\n    var requestData \u003d productRequest.Content.ReadAsAsync\u003cList\u003cDictionary\u003cstring, object\u003e\u003e\u003e()\n                            .GetAwaiter().GetResult();\n\n    if(requestData.Any()){\n        this.VatTax \u003d requestData.First()[\"defaultvattax\"]?.ToString();\n        \n        var d \u003d requestData.First()[\"saleprice\"];\n        if (d is null)return;\n        double doubleVal \u003d (double)d;\n        string doubleAsString \u003d doubleVal.ToString(\"R\");\n        this.UnitPrice \u003d decimal.Parse(doubleAsString);\n    }\n}\n" , "description" : "" } , { "name" : "OnChange_VatTax" , "type" : "Action" , "attribute" : "VatTax" , "expression" : "\nvar httpClient \u003d _Context.CreateApplicationHttpClient();\nvar productRequest \u003d httpClient.PostAsJsonAsync($\"Queries/VatTaxQuery/Default?PageSize\u003d1\",\n        new { Filter \u003d new { Property \u003d \"_code\", Value \u003d newValue } })\n    .GetAwaiter().GetResult();\n\nif (productRequest.IsSuccessStatusCode)\n{\n    var requestData \u003d productRequest.Content.ReadAsAsync\u003cList\u003cDictionary\u003cstring, object\u003e\u003e\u003e()\n                            .GetAwaiter().GetResult();\n\n    if(requestData.Any()){\n        \n        var d \u003d requestData.First()[\"multiplier\"];\n        if (d is null)return;\n        double doubleVal \u003d (double)d;\n        string doubleAsString \u003d doubleVal.ToString(\"R\");\n        this.VatValue \u003d decimal.Parse(doubleAsString);\n        \n    }\n}\n" , "description" : "" } , { "name" : "TotalWithVat_Formula" , "type" : "Formula" , "attribute" : "TotalWithVat" , "expression" : "return this.Value + this.Value * this.VatValue;" , "description" : "" } ] , "behaviourNamespaces" : [ ] }